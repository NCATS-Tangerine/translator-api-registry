openapi: 3.0.0
info:
  contact:
    email: help@biothings.io
    name: BioThings Team
    x-id: https://github.com/biothings
    x-role: responsible developers
  description: Documentation of the BioThings SEMMEDDB query web services.
  termsOfService: https://biothings.io/about
  title: BioThings SEMMEDDB API
  version: '1.0'
  x-translator:
    infores-curie: "infores:biothings-semmeddb"
    component: KP
    team:
      - Service Provider
    biolink-version: "2.2.5"
servers:
- description: Production server
  url: https://biothings.ncats.io/semmeddb
tags:
## include what entities are in the API
- name: disease
- name: phenotype
- name: gene
- name: chemical
- name: association
- name: query
- name: translator
- name: biothings
paths:
  /association:
    post:
      parameters:
      - $ref: '#/components/parameters/dotfield'
        name: dotfield
      - $ref: '#/components/parameters/fields'
        name: fields
      - $ref: '#/components/parameters/email'
        name: email
      - $ref: '#/components/parameters/format'
        name: format
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                ids:
                  description: 'multiple association IDs separated by comma. Note
                    that currently we only take the input ids up to 1000 maximum,
                    the rest will be omitted. Type: string (list). Max: 1000.'
                  type: string
              required:
              - ids
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Association'
                type: array
          description: A list of matching association objects
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: A response indicating an improperly formatted query
      summary: For a list of association IDs, return the matching disease object
      tags:
      - association
  /association/{associationid}:
    get:
      parameters:
      - description: Retrieve association objects based on Association ID  Supports
          JSONP and CORS as well.
        example: "85262525"
        in: path
        name: associationid
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/dotfield'
        name: dotfield
      - $ref: '#/components/parameters/callback'
        name: callback
      - $ref: '#/components/parameters/fields'
        name: fields
      - $ref: '#/components/parameters/email'
        name: email
      - $ref: '#/components/parameters/format'
        name: format
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Association'
          description: A matching association object
        '404':
          description: A response indicating an unknown association ID
      summary: Retrieve association objects based on ID
      tags:
      - association
  /metadata:
    get:
      parameters:
      - $ref: '#/components/parameters/callback'
        in: query
        name: callback
      responses:
        '200':
          description: KP metadata object
      summary: Get metadata about the data available from the API
      tags:
      - metadata
  /metadata/fields:
    get:
      parameters:
      - $ref: '#/components/parameters/search'
        name: search
      - $ref: '#/components/parameters/callback'
        name: callback
      - $ref: '#/components/parameters/prefix'
        name: prefix
      - $ref: '#/components/parameters/format'
        name: format
      responses:
        '200':
          description: metadata fields object
      summary: Get metadata about the data fields available
      tags:
      - metadata
  /query:
    get:
      parameters:
      - description: Query string.
        example: subject.umls:C0019134
        in: query
        name: q
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/dotfield'
        name: dotfield
      - $ref: '#/components/parameters/fields'
        name: fields
      - $ref: '#/components/parameters/facet_size'
        name: facet_size
      - $ref: '#/components/parameters/sort'
        name: sort
      - $ref: '#/components/parameters/callback'
        name: callback
      - $ref: '#/components/parameters/email'
        name: email
      - $ref: '#/components/parameters/facets'
        name: facets
      - $ref: '#/components/parameters/size'
        name: size
      - $ref: '#/components/parameters/from'
        name: from
      - $ref: '#/components/parameters/format'
        name: format
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult'
          description: A query response with the "hits" property
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: A response indicating an improperly formatted query
      summary: Make queries and return matching association hits. Supports JSONP and
        CORS as well.
      tags:
      - query
    post:
      parameters:
      - $ref: '#/components/parameters/dotfield'
        name: dotfield
      - $ref: '#/components/parameters/email'
        name: email
      - $ref: '#/components/parameters/fields'
        name: fields
      - $ref: '#/components/parameters/size'
        name: size
      - $ref: '#/components/parameters/format'
        name: format
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                q:
                  description: multiple query terms separated by comma (also "+" or
                    whitespace).  Does not support wildcard queries
                  type: string
                scopes:
                  description: 'a comma-separated list of fields as the search "scopes"
                    (fields to search through for query term). The available "fields"
                    that can be passed to the "scopes" parameter are listed in the
                    **/metadata/fields** endpoint.string Default: "scopes=_id".'
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryPOSTResult'
          description: Query response objects with the "hits" property
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: A response indicating an improperly formatted query
      summary: Make batch disease queries and return matching disease hits
      tags:
      - query
      x-bte-kgs-operations:
      ## aapp - Cell
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-affects-cell'
      - $ref: '#/components/x-bte-kgs-operations/revOP-Cell-affected_by-aapp'
      - $ref: '#/components/x-bte-kgs-operations/revOP-Cell-affected_by-gngm'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-disrupts-cell'
      - $ref: '#/components/x-bte-kgs-operations/revOP-Cell-disrupted_by-aapp'
      - $ref: '#/components/x-bte-kgs-operations/revOP-Cell-disrupted_by-gngm'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-stimulates-cell'
      - $ref: '#/components/x-bte-kgs-operations/revOP-Cell-stimulated_by-aapp'
      - $ref: '#/components/x-bte-kgs-operations/revOP-Cell-stimulated_by-gngm'
      ## aapp - CellularComponent
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-affects-celc'
      - $ref: '#/components/x-bte-kgs-operations/revOP-CellularComponent-affected_by-aapp'
      - $ref: '#/components/x-bte-kgs-operations/revOP-CellularComponent-affected_by-gngm'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-disrupts-celc'
      - $ref: '#/components/x-bte-kgs-operations/revOP-CellularComponent-disrupted_by-aapp'
      - $ref: '#/components/x-bte-kgs-operations/revOP-CellularComponent-disrupted_by-gngm'
      ## aapp - ChemicalEntity
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-interacts_with-imft'
      - $ref: '#/components/x-bte-kgs-operations/revOP-ChemicalEntity-interacts_with-aapp'
      - $ref: '#/components/x-bte-kgs-operations/revOP-ChemicalEntity-interacts_with-gngm'
      ## aapp - affects - Disease
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-affects-acab'
      - $ref: '#/components/x-bte-kgs-operations/revOP-Disease-affected_by-aapp'
      - $ref: '#/components/x-bte-kgs-operations/revOP-Disease-affected_by-gngm'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-affects-anab'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-affects-cgab'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-affects-comd'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-affects-dsyn'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-affects-inpo'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-affects-mobd'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-affects-neop'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-affects-patf'
      ## aapp - related_to - Disease
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-associated_with-comd'
      - $ref: '#/components/x-bte-kgs-operations/revOP-Disease-associated_with-aapp'
      - $ref: '#/components/x-bte-kgs-operations/revOP-Disease-associated_with-gngm'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-associated_with-comd'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-associated_with-dsyn'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-associated_with-inpo'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-associated_with-mobd'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-associated_with-neop'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-associated_with-patf'
      ## aapp - entity_positively_regulates_entity - Disease
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-augments-acab'
      - $ref: '#/components/x-bte-kgs-operations/revOP-Disease-augmented_by-aapp'
      - $ref: '#/components/x-bte-kgs-operations/revOP-Disease-augmented_by-gngm'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-augments-anab'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-augments-cgab'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-augments-comd'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-augments-dsyn'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-augments-inpo'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-augments-mobd'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-augments-neop'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-augments-patf'
      ## aapp - causes - Disease
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-causes-acab'
      - $ref: '#/components/x-bte-kgs-operations/revOP-Disease-caused_by-aapp'
      - $ref: '#/components/x-bte-kgs-operations/revOP-Disease-caused_by-gngm'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-causes-anab'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-causes-cgab'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-causes-comd'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-causes-dsyn'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-causes-inpo'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-causes-mobd'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-causes-neop'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-causes-patf'
      ## aapp - exacerbates - Disease
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-complicates-dsyn'
      - $ref: '#/components/x-bte-kgs-operations/revOP-Disease-complicated_by-aapp'
      - $ref: '#/components/x-bte-kgs-operations/revOP-Disease-complicated_by-gngm'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-complicates-inpo'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-complicates-neop'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-complicates-patf'
      ## aapp - disrupts - Disease
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-disrupts-acab'
      - $ref: '#/components/x-bte-kgs-operations/revOP-Disease-disrupted_by-aapp'
      - $ref: '#/components/x-bte-kgs-operations/revOP-Disease-disrupted_by-gngm'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-disrupts-anab'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-disrupts-cgab'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-disrupts-comd'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-disrupts-dsyn'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-disrupts-inpo'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-disrupts-mobd'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-disrupts-neop'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-disrupts-patf'
      ## aapp - predisposes - Disease
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-predisposes-comd'
      - $ref: '#/components/x-bte-kgs-operations/revOP-Disease-predisposed_by-aapp'
      - $ref: '#/components/x-bte-kgs-operations/revOP-Disease-predisposed_by-gngm'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-predisposes-dsyn'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-predisposes-inpo'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-predisposes-mobd'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-predisposes-neop'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-predisposes-patf'
      ## aapp - prevents - Disease
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-prevents-acab'
      - $ref: '#/components/x-bte-kgs-operations/revOP-Disease-prevented_by-aapp'
      - $ref: '#/components/x-bte-kgs-operations/revOP-Disease-prevented_by-gngm'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-prevents-anab'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-prevents-comd'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-prevents-dsyn'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-prevents-inpo'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-prevents-mobd'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-prevents-neop'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-prevents-patf'
      ## aapp - treats - Disease
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-treats-acab'
      - $ref: '#/components/x-bte-kgs-operations/revOP-Disease-treated_by-aapp'
      - $ref: '#/components/x-bte-kgs-operations/revOP-Disease-treated_by-gngm'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-treats-anab'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-treats-cgab'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-treats-comd'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-treats-dsyn'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-treats-inpo'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-treats-mobd'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-treats-neop'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-treats-patf'
      ## aapp - GrossAnatomicalStructure
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-affects-bpoc'
      - $ref: '#/components/x-bte-kgs-operations/revOP-GrossAnatomicalStructure-affected_by-aapp'
      - $ref: '#/components/x-bte-kgs-operations/revOP-GrossAnatomicalStructure-affected_by-gngm'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-augments-bpoc'
      - $ref: '#/components/x-bte-kgs-operations/revOP-GrossAnatomicalStructure-augmented_by-aapp'
      - $ref: '#/components/x-bte-kgs-operations/revOP-GrossAnatomicalStructure-augmented_by-gngm'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-disrupts-bpoc'
      - $ref: '#/components/x-bte-kgs-operations/revOP-GrossAnatomicalStructure-disrupted_by-aapp'
      - $ref: '#/components/x-bte-kgs-operations/revOP-GrossAnatomicalStructure-disrupted_by-gngm'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-part_of-bpoc'
      - $ref: '#/components/x-bte-kgs-operations/revOP-GrossAnatomicalStructure-has_part-aapp'
      - $ref: '#/components/x-bte-kgs-operations/revOP-GrossAnatomicalStructure-has_part-gngm'
      ## aapp - MolecularActivity
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-affects-moft'
      - $ref: '#/components/x-bte-kgs-operations/revOP-MolecularActivity-affected_by-aapp'
      - $ref: '#/components/x-bte-kgs-operations/revOP-MolecularActivity-affected_by-gngm'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-augments-moft'
      - $ref: '#/components/x-bte-kgs-operations/revOP-MolecularActivity-augmented_by-aapp'
      - $ref: '#/components/x-bte-kgs-operations/revOP-MolecularActivity-augmented_by-gngm'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-disrupts-moft'
      - $ref: '#/components/x-bte-kgs-operations/revOP-MolecularActivity-disrupted_by-aapp'
      - $ref: '#/components/x-bte-kgs-operations/revOP-MolecularActivity-disrupted_by-gngm'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-stimulates-moft'
      - $ref: '#/components/x-bte-kgs-operations/revOP-MolecularActivity-stimulated_by-aapp'
      - $ref: '#/components/x-bte-kgs-operations/revOP-MolecularActivity-stimulated_by-gngm'
      ## aapp - PhenotypicFeature
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-affects-sosy'
      - $ref: '#/components/x-bte-kgs-operations/revOP-PhenotypicFeature-affected_by-aapp'
      - $ref: '#/components/x-bte-kgs-operations/revOP-PhenotypicFeature-affected_by-gngm'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-associated_with-sosy'
      - $ref: '#/components/x-bte-kgs-operations/revOP-PhenotypicFeature-associated_with-aapp'
      - $ref: '#/components/x-bte-kgs-operations/revOP-PhenotypicFeature-associated_with-gngm'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-augments-sosy'
      - $ref: '#/components/x-bte-kgs-operations/revOP-PhenotypicFeature-augmented_by-aapp'
      - $ref: '#/components/x-bte-kgs-operations/revOP-PhenotypicFeature-augmented_by-gngm'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-causes-sosy'
      - $ref: '#/components/x-bte-kgs-operations/revOP-PhenotypicFeature-caused_by-aapp'
      - $ref: '#/components/x-bte-kgs-operations/revOP-PhenotypicFeature-caused_by-gngm'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-disrupts-sosy'
      - $ref: '#/components/x-bte-kgs-operations/revOP-PhenotypicFeature-disrupted_by-aapp'
      - $ref: '#/components/x-bte-kgs-operations/revOP-PhenotypicFeature-disrupted_by-gngm'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-predisposes-sosy'
      - $ref: '#/components/x-bte-kgs-operations/revOP-PhenotypicFeature-predisposed_by-aapp'
      - $ref: '#/components/x-bte-kgs-operations/revOP-PhenotypicFeature-predisposed_by-gngm'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-prevents-sosy'
      - $ref: '#/components/x-bte-kgs-operations/revOP-PhenotypicFeature-prevented_by-aapp'
      - $ref: '#/components/x-bte-kgs-operations/revOP-PhenotypicFeature-prevented_by-gngm'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-treats-sosy'
      - $ref: '#/components/x-bte-kgs-operations/revOP-PhenotypicFeature-treated_by-aapp'
      - $ref: '#/components/x-bte-kgs-operations/revOP-PhenotypicFeature-treated_by-gngm'
      ## aapp - affects - PhysiologicalProcess
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-affects-celf'
      - $ref: '#/components/x-bte-kgs-operations/revOP-PhysiologicalProcess-affected_by-aapp'
      - $ref: '#/components/x-bte-kgs-operations/revOP-PhysiologicalProcess-affected_by-gngm'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-affects-orgf'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-affects-ortf'
      - $ref: '#/components/x-bte-kgs-operations/NCBIGene-affects-phsf'


    

components:
  parameters:
    callback:
      description: 'you can pass a "callback" parameter to make a JSONP call. Type:
        string.'
      in: query
      name: callback
      schema:
        type: string
    dotfield:
      description: 'control the format of the returned chem object. If "true" or "1",
        all fields will be collapsed into a single level deep object (all nested objects
        will be a single level deep, using dotfield notation to signify the nested
        structure) Type: boolean. Default: false.'
      in: query
      name: dotfield
      schema:
        type: boolean
    email:
      description: If you are regular users of our services, we encourage you to provide
        us with an email, so that we can better track the usage or follow up with
        you.
      in: query
      name: email
      schema:
        type: string
    facet_size:
      description: 'the number of facet buckets to return in the response. Type: integer.
        Default: 10. Max: 1000.'
      in: query
      name: facet_size
      schema:
        type: integer
    facets:
      description: 'a comma-separated list of fields to return facets on.  In addition
        to query hits, the fields notated in "facets" will be aggregated by value
        and bucklet counts will be displayed in the "facets" field of the response
        object. Type: string (list). Default: None. Max: 1000.'
      in: query
      name: facets
      schema:
        type: string
    fields:
      description: 'a comma-separated list of fields (in dotfield notation) used to
        limit the fields returned from the matching chem hit(s). The supported field
        names can be found from any chem object or from the /metadata/fields endpoint.
        If "fields=all", all available fields will be returned. Type: string (list).
        Default: all. Max: 1000.'
      in: query
      name: fields
      schema:
        type: string
    format:
      description: 'controls output format of server response, currently supports:
        "json", "jsonld", "html". Type: string. Default: json.'
      in: query
      name: format
      schema:
        type: string
    from:
      description: 'the number of matching chem hits to skip, starting from 0.  This
        can be useful for paging in combination with the "size" parameter. Type: integer.
        Default: None.'
      in: query
      name: from
      schema:
        type: integer
    prefix:
      description: 'Pass a prefix string to filter the available fields. Type: string.
        Default: None.'
      in: query
      name: prefix
      schema:
        type: string
    search:
      description: 'Pass a search term to filter the available fields. Type: string.
        Default: None.'
      in: query
      name: search
      schema:
        type: string
    size:
      description: 'the maximum number of matching chem hits to return per batch.
        Type: integer. Default: 10.'
      in: query
      name: size
      schema:
        type: integer
    sort:
      description: 'the comma-separated list of fields to sort on. Prefix each with
        "-" for descending order, otherwise in ascending order. Default: sort by descending
        score.'
      in: query
      name: sort
      schema:
        type: string
  schemas:
    Association:
      properties:
        _id:
          type: string
      required:
      - _id
      type: object
    ErrorResult:
      properties:
        message:
          type: string
        success:
          type: boolean
      type: object
    QueryPOSTResult:
      items:
        allOf:
        - $ref: '#/components/schemas/Association'
        - properties:
            _score:
              format: float
              type: number
            query:
              type: string
          type: object
      type: array
    QueryResult:
      properties:
        hits:
          items:
            $ref: '#/components/schemas/Association'
          type: array
        max_score:
          format: float
          type: number
        took:
          type: integer
        total:
          type: integer
      type: object
    int64_or_array:
      oneOf:
      - items:
          format: int64
          type: integer
        type: array
      - format: int64
        type: integer
    string_or_array:
      oneOf:
      - items:
          type: string
        type: array
      - type: string
  x-bte-kgs-operations:
## FUTURE: currently, BTE already strips prefix.... In the future, need to add rmPrefix before wrap
## currently we can't use _exists_ with this kind of query, or OR (to map multiple SEMMED semantic types to 1 biolink semantic type)
## joinSafe is only needed if the delimiter isn't a comma
  ## aapp - Cell
    NCBIGene-affects-cell:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:AFFECTS AND object.semantic_type_abbreviation:cell AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >- 
            {
              "q": [ {{ queryInputs | wrap( '["' , '","AFFECTS","cell", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Cell
        predicate: affects
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
        ## Examples:
        ## - NCBIGene:928 (CD9) -> UMLS:C0014467 (eosinophil)
        ## - NCBIGene:5016 (OVGP1) -> UMLS:C0029045 (Oocytes)
    revOP-Cell-affected_by-aapp:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:aapp AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:AFFECTS AND object.semantic_type_abbreviation:cell AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: Cell
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","AFFECTS","aapp", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: affected_by
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
        ## Examples:
        ## - UMLS:C0024432 (macrophage) -> NCBIGene:2048 (EPHB2)
        ## - UMLS:C0005821 (Blood Platelets) -> NCBIGene:973 (CD79A)
    revOP-Cell-affected_by-gngm:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:gngm AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:AFFECTS AND object.semantic_type_abbreviation:cell AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: Cell
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","AFFECTS","gngm", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: affected_by
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
        ## Examples:
        ## - UMLS:C0014467 (eosinophil) -> NCBIGene:928 (CD9)  
        ## - UMLS:C0029045 (Oocytes) -> NCBIGene:5016 (OVGP1)  
    NCBIGene-disrupts-cell:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:DISRUPTS AND object.semantic_type_abbreviation:cell AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","DISRUPTS","cell", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Cell
        predicate: disrupts
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
        ## Examples:
        ## - NCBIGene:9768 (PCLAF) -> UMLS:C0024432 (macrophage)
        ## - NCBIGene:5131 (PDB1) -> UMLS:C0206427 (Rod Photoreceptors)
    revOP-Cell-disrupted_by-aapp:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:aapp AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:DISRUPTS AND object.semantic_type_abbreviation:cell AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: Cell
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","DISRUPTS","aapp", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: disrupted_by
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
        ## Examples:
        ## - UMLS:C0024432 (macrophage) -> NCBIGene:3290 (HSD11B1)  
        ## - UMLS:C1257975 (Mesenchymal Stem Cells) -> NCBIGene:7422 (VEGFA)  
    revOP-Cell-disrupted_by-gngm:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:gngm AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:DISRUPTS AND object.semantic_type_abbreviation:cell AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: Cell
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","DISRUPTS","gngm", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: disrupted_by
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
        ## Examples:
        ## - UMLS:C0024432 (macrophage) -> NCBIGene:9768 (PCLAF) 
        ## - UMLS:C0206427 (Rod Photoreceptors) -> NCBIGene:5131 (PDB1) 
    NCBIGene-stimulates-cell:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:STIMULATES AND object.semantic_type_abbreviation:cell AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","STIMULATES","cell", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Cell
        predicate: entity_positively_regulates_entity
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
        ## Examples:
        ## - NCBIGene:909 (CD1A) -> UMLS:C0004561 (B-Lymphocytes)
        ## - NCBIGene:728 (C5AR1) -> UMLS:C0023516 (Leukocytes)
    revOP-Cell-stimulated_by-aapp:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:aapp AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:STIMULATES AND object.semantic_type_abbreviation:cell AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: Cell
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","STIMULATES","aapp", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: entity_positively_regulated_by_entity
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
        ## Examples:
        ## - UMLS:C0004561 (B-Lymphocytes) -> NCBIGene:909 (CD1A) 
        ## - UMLS:C0023516 (Leukocytes) -> NCBIGene:728 (C5AR1) 
    revOP-Cell-stimulated_by-gngm:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:gngm AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:DISRUPTS AND object.semantic_type_abbreviation:cell AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: Cell
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","STIMULATES","gngm", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: entity_positively_regulated_by_entity
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
        ## Examples:
        ## - UMLS:C0024264 (Lymphocyte) -> NCBIGene:3497 (IGHE) 
        ## - UMLS:C0038250 (Stem cells) -> NCBIGene:50674 (NEUROG3) 
  ## aapp - CellularComponent
    NCBIGene-affects-celc:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:AFFECTS AND object.semantic_type_abbreviation:celc AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","AFFECTS","celc", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: CellularComponent
        predicate: affects
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
        ## Examples:
        ## - NCBIGene:4589 (MUC7) -> UMLS:C1167331 (outer membrane)
        ## - NCBIGene:26999 (CYFIP2) -> UMLS:C0872341 (Dendritic Spines)
    revOP-CellularComponent-affected_by-aapp:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:aapp AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:AFFECTS AND object.semantic_type_abbreviation:celc AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: CellularComponent
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","AFFECTS","aapp", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: affected_by
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
        ## Examples:
        ## - UMLS:C1167518 (nucleocapsid location) -> NCBIGene:2644 (GCHFR) 
        ## - UMLS:C1167518 (nucleocapsid location) -> NCBIGene:2220 (FCN2) 
    revOP-CellularComponent-affected_by-gngm:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:gngm AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:AFFECTS AND object.semantic_type_abbreviation:celc AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: CellularComponent
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","AFFECTS","gngm", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: affected_by
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
        ## Examples:
        ## - UMLS:C1167331 (outer membrane) -> NCBIGene:4589 (MUC7)
        ## - UMLS:C0872341 (Dendritic Spines) -> NCBIGene:26999 (CYFIP2) 
    NCBIGene-disrupts-celc:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:DISRUPTS AND object.semantic_type_abbreviation:celc AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","DISRUPTS","celc", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: CellularComponent
        predicate: disrupts
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
        ## Examples:
        ## - NCBIGene:2965 (GTF2H1) -> UMLS:C0024369 (Lysosomes)
        ## - NCBIGene:10657 (KHDRBS1) -> UMLS:C0024369 (Lysosomes)
    revOP-CellularComponent-disrupted_by-aapp:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:aapp AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:DISRUPTS AND object.semantic_type_abbreviation:celc AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: CellularComponent
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","DISRUPTS","aapp", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: disrupted_by
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
        ## Examples:
        ## - UMLS:C0887869 (Cell-Matrix Junction) -> NCBIGene:3688 (ITGB1)
        ## - UMLS:C0600315 (Filopodia) -> NCBIGene:6010 (RHO) 
    revOP-CellularComponent-disrupted_by-gngm:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:gngm AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:DISRUPTS AND object.semantic_type_abbreviation:celc AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: CellularComponent
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","DISRUPTS","gngm", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: disrupted_by
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
        ## Examples:
        ## - UMLS:C0024369 (Lysosomes) -> NCBIGene:2965 (GTF2H1) 
        ## - UMLS:C0024369 (Lysosomes) -> NCBIGene:10657 (KHDRBS1)
  ## aapp - ChemicalEntity
    NCBIGene-interacts_with-imft:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:INTERACTS_WITH AND object.semantic_type_abbreviation:imft AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","INTERACTS_WITH","imft", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: ChemicalEntity
        predicate: interacts_with
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
        ## Examples:
        ## - NCBIGene:718 (C3) -> UMLS:C0312817 (Immunologic Factor)
        ## - NCBIGene:3107 (HLA-C) -> UMLS:C0004359 (Autoantigens)
    revOP-ChemicalEntity-interacts_with-aapp:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:aapp AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:INTERACTS_WITH AND object.semantic_type_abbreviation:imft AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: ChemicalEntity
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","INTERACTS_WITH","aapp", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: interacts_with
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
        ## Examples:
        ## - UMLS:C0301838 (Soluble antigen) -> NCBIGene:973 (CD79A) 
        ## - UMLS:C0301838 (Soluble antigen) -> NCBIGene:959 (CD40LG)
    revOP-ChemicalEntity-interacts_with-gngm:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:gngm AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:INTERACTS_WITH AND object.semantic_type_abbreviation:imft AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: ChemicalEntity
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","INTERACTS_WITH","gngm", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: interacts_with
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
        ## Examples:
        ## - UMLS:C0312817 (Immunologic Factor) -> NCBIGene:718 (C3) 
        ## - UMLS:C0004359 (Autoantigens) -> NCBIGene:3107 (HLA-C) 
  ## aapp - affects - Disease
    NCBIGene-affects-acab:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:AFFECTS AND object.semantic_type_abbreviation:acab AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","AFFECTS","acab", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: affects
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
        ## Examples:
        ## - NCBIGene:3918 (LAMC2) -> UMLS:C1299564 (Posthemorrhagic hydrocephalus)
        ## - NCBIGene:2221 (FCP1) -> UMLS:C0001511 (Adhesions)
    revOP-Disease-affected_by-aapp:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:aapp AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:AFFECTS AND object.semantic_type_abbreviation:acab AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: Disease
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","AFFECTS","aapp", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: affected_by
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
        ## Examples:
        ## - UMLS:C0271083 (Nonexudative age-related macular degeneration) -> NCBIGene:729230 (CCR2) 
        ## - UMLS:C0001511 (Adhesions) -> NCBIGene:952 (CD38)
    revOP-Disease-affected_by-gngm:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:gngm AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:AFFECTS AND object.semantic_type_abbreviation:acab AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: Disease
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","AFFECTS","gngm", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: affected_by
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
        ## Examples:
        ## - UMLS:C1299564 (Posthemorrhagic hydrocephalus) -> NCBIGene:3918 (LAMC2) 
        ## - UMLS:C0001511 (Adhesions) -> NCBIGene:2221 (FCP1) 
    NCBIGene-affects-anab:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:AFFECTS AND object.semantic_type_abbreviation:anab AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","AFFECTS","anab", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: affects
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
        ## Examples:
        ## - NCBIGene:1756 (DMD) -> UMLS:C0036439 (Scoliosis, unspecified)
        ## - NCBIGene:6899 (TBX1) -> UMLS:C0019296 (Inguinal Hernia, Indirect)
      ## uses previous revOPs: revOP-Disease-affected_by-aapp, revOP-Disease-affected_by-gngm
    NCBIGene-affects-cgab:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:AFFECTS AND object.semantic_type_abbreviation:cgab AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","AFFECTS","cgab", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: affects
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
        ## Examples:
        ## - NCBIGene:182 (JAG1) -> UMLS:C0085280 (Alagille Syndrome)
        ## - NCBIGene:6736 (SRY) -> UMLS:C0266361 (Hermaphroditism, True)
      ## uses previous revOPs: revOP-Disease-affected_by-aapp, revOP-Disease-affected_by-gngm
    NCBIGene-affects-comd:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:AFFECTS AND object.semantic_type_abbreviation:comd AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","AFFECTS","comd", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: affects
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
        ## Examples:
        ## - NCBIGene:4803 (NGF) -> UMLS:C0027746 (Nerve Degeneration)
        ## - NCBIGene:6098 (ROS1) -> UMLS:C0012860 (DNA Damage)
      ## uses previous revOPs: revOP-Disease-affected_by-aapp, revOP-Disease-affected_by-gngm
    NCBIGene-affects-dsyn:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:AFFECTS AND object.semantic_type_abbreviation:dsyn AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","AFFECTS","dsyn", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: affects
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
        ## Examples:
        ## - NCBIGene:1437 (CSF2) -> UMLS:C0025289 (Meningitis)
        ## - NCBIGene:3497 (IGHE) -> UMLS:C0949570 (Wheat Hypersensitivity)
      ## uses previous revOPs: revOP-Disease-affected_by-aapp, revOP-Disease-affected_by-gngm
    NCBIGene-affects-inpo:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:AFFECTS AND object.semantic_type_abbreviation:inpo AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","AFFECTS","inpo", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: affects
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
        ## Examples:
        ## - NCBIGene:1667 (DEFA1) -> UMLS:C0600688 (Toxic effect)
        ## - NCBIGene:146 (ADRA1D) -> UMLS:C0746730 (myocardium; injury)
      ## uses previous revOPs: revOP-Disease-affected_by-aapp, revOP-Disease-affected_by-gngm
    NCBIGene-affects-mobd:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:AFFECTS AND object.semantic_type_abbreviation:mobd AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","AFFECTS","mobd", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: affects
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
        ## Examples:
        ## - NCBIGene:10800 (CYSLTR1) -> UMLS:C0233794 (Memory impairment)
        ## - NCBIGene:4986 (OPRK1) -> UMLS:C1510472 (Drug Dependence)
      ## uses previous revOPs: revOP-Disease-affected_by-aapp, revOP-Disease-affected_by-gngm
    NCBIGene-affects-neop:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:AFFECTS AND object.semantic_type_abbreviation:neop AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","AFFECTS","neop", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: affects
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
        ## Examples:
        ## - NCBIGene:1442 (CSH1) -> UMLS:C0005695 (Bladder Neoplasm)
        ## - NCBIGene:4615 (MYD88) -> UMLS:C0598934 (tumor growth)
      ## uses previous revOPs: revOP-Disease-affected_by-aapp, revOP-Disease-affected_by-gngm
    NCBIGene-affects-patf:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:AFFECTS AND object.semantic_type_abbreviation:patf AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","AFFECTS","patf", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: affects
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
        ## Examples:
        ## - NCBIGene:3497 (IGHE) -> UMLS:C0021368 (Inflammation)
        ## - NCBIGene:51497 (NELFCD) -> UMLS:C0021375 (Inflammation, allergic)
      ## uses previous revOPs: revOP-Disease-affected_by-aapp, revOP-Disease-affected_by-gngm
  ## aapp - related_to - Disease
    NCBIGene-associated_with-comd:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:ASSOCIATED_WITH AND object.semantic_type_abbreviation:comd AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","ASSOCIATED_WITH","comd", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: gene_associated_with_condition
        ## since ref says ASSOCIATED_WITH is a "gene-disease relation"
        ##   https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-12-486#Sec26
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
        ## Examples:
        ## - NCBIGene:10628 (TXNIP) -> UMLS:C1516373 (Cellular Stress)
        ## - NCBIGene:2068 (ERCC2) -> UMLS:C0596402 (cytotoxicity)
    revOP-Disease-associated_with-aapp:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:aapp AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:ASSOCIATED_WITH AND object.semantic_type_abbreviation:comd AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: Disease
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","ASSOCIATED_WITH","aapp", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: condition_associated_with_gene
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
        ## Examples:
        ## - UMLS:C0700080 (Vascular proliferation) -> NCBIGene:22882 (ZHX2)
        ## - UMLS:C0021368 (Inflammation) -> NCBIGene:5906 (RAP1A) 
    revOP-Disease-associated_with-gngm:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:gngm AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:ASSOCIATED_WITH AND object.semantic_type_abbreviation:comd AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: Disease
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","ASSOCIATED_WITH","gngm", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: condition_associated_with_gene
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"   
        ## Examples:
        ## - UMLS:C1516373 (Cellular Stress) -> NCBIGene:10628 (TXNIP) 
        ## - UMLS:C0596402 (cytotoxicity) -> NCBIGene:2068 (ERCC2) 
    NCBIGene-associated_with-dsyn:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:ASSOCIATED_WITH AND object.semantic_type_abbreviation:dsyn AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","ASSOCIATED_WITH","dsyn", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: gene_associated_with_condition
        ## since ref says ASSOCIATED_WITH is a "gene-disease relation"
        ##   https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-12-486#Sec26
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
        ## Examples:
        ## - NCBIGene:213 (ALB) -> UMLS:C0024141 (Lupus Erythematosus, Systemic)
        ## - NCBIGene:959 (CD40LG) -> UMLS:C0018482 (Haemophilus Infections)
    NCBIGene-associated_with-inpo:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:ASSOCIATED_WITH AND object.semantic_type_abbreviation:inpo AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","ASSOCIATED_WITH","inpo", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: gene_associated_with_condition
        ## since ref says ASSOCIATED_WITH is a "gene-disease relation"
        ##   https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-12-486#Sec26
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
        ## Examples:
        ## - NCBIGene:729230 (CCR2) -> UMLS:C0160420 (Injury to kidney NOS)
        ## - NCBIGene:3918 (LAMC2) -> UMLS:C0281899 (Prolapsed lumbar disc)
    NCBIGene-associated_with-mobd:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:ASSOCIATED_WITH AND object.semantic_type_abbreviation:mobd AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","ASSOCIATED_WITH","mobd", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: gene_associated_with_condition
        ## since ref says ASSOCIATED_WITH is a "gene-disease relation"
        ##   https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-12-486#Sec26
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
        ## Examples:
        ## - NCBIGene:55166 (CENPQ) -> UMLS:C0036341 (Schizophrenia)
        ## - NCBIGene:4985 (OPRD1) -> UMLS:C0019337 (Heroin Dependence)
    NCBIGene-associated_with-neop:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:ASSOCIATED_WITH AND object.semantic_type_abbreviation:neop AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","ASSOCIATED_WITH","neop", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: gene_associated_with_condition
        ## since ref says ASSOCIATED_WITH is a "gene-disease relation"
        ##   https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-12-486#Sec26
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
        ## Examples:
        ## - NCBIGene:5727 (PTCH1) -> UMLS:C0238463 (Papillary thyroid carcinoma)
        ## - NCBIGene:1026 (CDKN1A) -> UMLS:C0017638 (Glioma)
    NCBIGene-associated_with-patf:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:ASSOCIATED_WITH AND object.semantic_type_abbreviation:patf AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","ASSOCIATED_WITH","patf", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: gene_associated_with_condition
        ## since ref says ASSOCIATED_WITH is a "gene-disease relation"
        ##   https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-12-486#Sec26
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
        ## Examples:
        ## - NCBIGene:644914 (H3F3AP6) -> UMLS:C0333951 (Growth arrest)
        ## - NCBIGene:1026 (CDKN1A) -> UMLS:C0333951 (Growth arrest)
  ## aapp - entity_positively_regulates_entity - Disease
    NCBIGene-augments-acab:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:AUGMENTS AND object.semantic_type_abbreviation:acab AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","AUGMENTS","acab", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: entity_positively_regulates_entity
        ## since we don't support mixins yet
        ## also look at https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-12-486#Sec26
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
        ## Examples:
        ## - NCBIGene:860 (RUNX2) -> UMLS:C0022548 (Keloid)
        ## - NCBIGene:4760 (NEUROD1) -> UMLS:C0001511 (Adhesions)
    revOP-Disease-augmented_by-aapp:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:aapp AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:AUGMENTS AND object.semantic_type_abbreviation:acab AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: Disease
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","AUGMENTS","aapp", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: entity_positively_regulated_by_entity
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
    revOP-Disease-augmented_by-gngm:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:gngm AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:AUGMENTS AND object.semantic_type_abbreviation:acab AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: Disease
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","AUGMENTS","gngm", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: entity_positively_regulated_by_entity
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
    NCBIGene-augments-anab:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:AUGMENTS AND object.semantic_type_abbreviation:anab AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","AUGMENTS","anab", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: entity_positively_regulates_entity
        ## since we don't support mixins yet
        ## also look at https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-12-486#Sec26
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    NCBIGene-augments-cgab:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:AUGMENTS AND object.semantic_type_abbreviation:cgab AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","AUGMENTS","cgab", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: entity_positively_regulates_entity
        ## since we don't support mixins yet
        ## also look at https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-12-486#Sec26
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    NCBIGene-augments-comd:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:AUGMENTS AND object.semantic_type_abbreviation:comd AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","AUGMENTS","comd", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: entity_positively_regulates_entity
        ## since we don't support mixins yet
        ## also look at https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-12-486#Sec26
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    NCBIGene-augments-dsyn:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:AUGMENTS AND object.semantic_type_abbreviation:dsyn AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","AUGMENTS","dsyn", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: entity_positively_regulates_entity
        ## since we don't support mixins yet
        ## also look at https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-12-486#Sec26
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    NCBIGene-augments-inpo:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:AUGMENTS AND object.semantic_type_abbreviation:inpo AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","AUGMENTS","inpo", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: entity_positively_regulates_entity
        ## since we don't support mixins yet
        ## also look at https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-12-486#Sec26
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    NCBIGene-augments-mobd:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:AUGMENTS AND object.semantic_type_abbreviation:mobd AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","AUGMENTS","mobd", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: entity_positively_regulates_entity
        ## since we don't support mixins yet
        ## also look at https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-12-486#Sec26
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    NCBIGene-augments-neop:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:AUGMENTS AND object.semantic_type_abbreviation:neop AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","AUGMENTS","neop", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: entity_positively_regulates_entity
        ## since we don't support mixins yet
        ## also look at https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-12-486#Sec26
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    NCBIGene-augments-patf:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:AUGMENTS AND object.semantic_type_abbreviation:patf AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","AUGMENTS","patf", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: entity_positively_regulates_entity
        ## since we don't support mixins yet
        ## also look at https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-12-486#Sec26
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
  ## aapp - causes - Disease
    NCBIGene-causes-acab:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:CAUSES AND object.semantic_type_abbreviation:acab AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","CAUSES","acab", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: causes
        ## since we don't support mixins yet
        ## also look at https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-12-486#Sec26
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    revOP-Disease-caused_by-aapp:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:aapp AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:CAUSES AND object.semantic_type_abbreviation:acab AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: Disease
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","CAUSES","aapp", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: caused_by
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
    revOP-Disease-caused_by-gngm:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:gngm AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:CAUSES AND object.semantic_type_abbreviation:acab AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: Disease
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","CAUSES","gngm", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: caused_by
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
    NCBIGene-causes-anab:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:CAUSES AND object.semantic_type_abbreviation:anab AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","CAUSES","anab", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: causes
        ## since we don't support mixins yet
        ## also look at https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-12-486#Sec26
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    NCBIGene-causes-cgab:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:CAUSES AND object.semantic_type_abbreviation:cgab AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","CAUSES","cgab", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: causes
        ## since we don't support mixins yet
        ## also look at https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-12-486#Sec26
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    NCBIGene-causes-comd:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:CAUSES AND object.semantic_type_abbreviation:comd AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","CAUSES","comd", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: causes
        ## since we don't support mixins yet
        ## also look at https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-12-486#Sec26
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    NCBIGene-causes-dsyn:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:CAUSES AND object.semantic_type_abbreviation:dsyn AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","CAUSES","dsyn", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: causes
        ## since we don't support mixins yet
        ## also look at https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-12-486#Sec26
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    NCBIGene-causes-inpo:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:CAUSES AND object.semantic_type_abbreviation:inpo AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","CAUSES","inpo", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: causes
        ## since we don't support mixins yet
        ## also look at https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-12-486#Sec26
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    NCBIGene-causes-mobd:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:CAUSES AND object.semantic_type_abbreviation:mobd AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","CAUSES","mobd", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: causes
        ## since we don't support mixins yet
        ## also look at https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-12-486#Sec26
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    NCBIGene-causes-neop:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:CAUSES AND object.semantic_type_abbreviation:neop AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","CAUSES","neop", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: causes
        ## since we don't support mixins yet
        ## also look at https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-12-486#Sec26
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    NCBIGene-causes-patf:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:CAUSES AND object.semantic_type_abbreviation:patf AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","CAUSES","patf", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: causes
        ## since we don't support mixins yet
        ## also look at https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-12-486#Sec26
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    NCBIGene-complicates-dsyn:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:COMPLICATES AND object.semantic_type_abbreviation:dsyn AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","COMPLICATES","dsyn", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: exacerbates
        ## also look at https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-12-486#Sec26
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    revOP-Disease-complicated_by-aapp:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:aapp AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:COMPLICATES AND object.semantic_type_abbreviation:dsyn AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: Disease
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","COMPLICATES","aapp", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: related_to
        ## doesn't have an inverse right now
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
    revOP-Disease-complicated_by-gngm:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:gngm AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:COMPLICATES AND object.semantic_type_abbreviation:dsyn AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: Disease
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","COMPLICATES","gngm", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: related_to
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
    NCBIGene-complicates-inpo:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:COMPLICATES AND object.semantic_type_abbreviation:inpo AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","COMPLICATES","inpo", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: exacerbates
        ## also look at https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-12-486#Sec26
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    NCBIGene-complicates-neop:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:COMPLICATES AND object.semantic_type_abbreviation:neop AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","COMPLICATES","neop", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: exacerbates
        ## also look at https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-12-486#Sec26
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    NCBIGene-complicates-patf:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:COMPLICATES AND object.semantic_type_abbreviation:patf AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","COMPLICATES","patf", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: exacerbates
        ## also look at https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-12-486#Sec26
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
  ## aapp - disrupts - Disease
    NCBIGene-disrupts-acab:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:DISRUPTS AND object.semantic_type_abbreviation:acab AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","DISRUPTS","acab", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: disrupts
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    revOP-Disease-disrupted_by-aapp:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:aapp AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:DISRUPTS AND object.semantic_type_abbreviation:acab AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: Disease
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","DISRUPTS","aapp", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: disrupted_by
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
    revOP-Disease-disrupted_by-gngm:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:gngm AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:DISRUPTS AND object.semantic_type_abbreviation:acab AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: Disease
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","DISRUPTS","gngm", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: disrupted_by
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
    NCBIGene-disrupts-anab:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:DISRUPTS AND object.semantic_type_abbreviation:anab AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","DISRUPTS","anab", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: disrupts
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    NCBIGene-disrupts-cgab:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:DISRUPTS AND object.semantic_type_abbreviation:cgab AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","DISRUPTS","cgab", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: disrupts
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    NCBIGene-disrupts-comd:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:DISRUPTS AND object.semantic_type_abbreviation:comd AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","DISRUPTS","comd", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: disrupts
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    NCBIGene-disrupts-dsyn:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:DISRUPTS AND object.semantic_type_abbreviation:dsyn AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","DISRUPTS","dsyn", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: disrupts
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    NCBIGene-disrupts-inpo:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:DISRUPTS AND object.semantic_type_abbreviation:inpo AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","DISRUPTS","inpo", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: disrupts
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    NCBIGene-disrupts-mobd:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:DISRUPTS AND object.semantic_type_abbreviation:mobd AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","DISRUPTS","mobd", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: disrupts
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    NCBIGene-disrupts-neop:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:DISRUPTS AND object.semantic_type_abbreviation:neop AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","DISRUPTS","neop", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: disrupts
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    NCBIGene-disrupts-patf:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:DISRUPTS AND object.semantic_type_abbreviation:patf AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","DISRUPTS","patf", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: disrupts
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
  ## aapp - predisposes - Disease
    NCBIGene-predisposes-comd:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:PREDISPOSES AND object.semantic_type_abbreviation:comd AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","PREDISPOSES","comd", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: predisposes
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    revOP-Disease-predisposed_by-aapp:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:aapp AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:PREDISPOSES AND object.semantic_type_abbreviation:comd AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: Disease
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","PREDISPOSES","aapp", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: related_to
        ## doesn't have an inverse right now
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
    revOP-Disease-predisposed_by-gngm:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:gngm AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:PREDISPOSES AND object.semantic_type_abbreviation:comd AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: Disease
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","PREDISPOSES","gngm", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: related_to
        ## doesn't have an inverse right now
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
    NCBIGene-predisposes-dsyn:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:PREDISPOSES AND object.semantic_type_abbreviation:dsyn AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","PREDISPOSES","dsyn", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: predisposes
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    NCBIGene-predisposes-inpo:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:PREDISPOSES AND object.semantic_type_abbreviation:inpo AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","PREDISPOSES","inpo", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: predisposes
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    NCBIGene-predisposes-mobd:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:PREDISPOSES AND object.semantic_type_abbreviation:mobd AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","PREDISPOSES","mobd", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: predisposes
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    NCBIGene-predisposes-neop:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:PREDISPOSES AND object.semantic_type_abbreviation:neop AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","PREDISPOSES","neop", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: predisposes
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    NCBIGene-predisposes-patf:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:PREDISPOSES AND object.semantic_type_abbreviation:patf AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","PREDISPOSES","patf", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: predisposes
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
  ## aapp - prevents - Disease
    NCBIGene-prevents-acab:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:PREVENTS AND object.semantic_type_abbreviation:acab AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","PREVENTS","acab", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: prevents
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    revOP-Disease-prevented_by-aapp:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:aapp AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:PREVENTS AND object.semantic_type_abbreviation:acab AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: Disease
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","PREVENTS","aapp", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: prevented_by
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
    revOP-Disease-prevented_by-gngm:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:gngm AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:PREVENTS AND object.semantic_type_abbreviation:acab AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: Disease
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","PREVENTS","gngm", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: prevented_by
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
    NCBIGene-prevents-anab:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:PREVENTS AND object.semantic_type_abbreviation:anab AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","PREVENTS","anab", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: prevents
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    NCBIGene-prevents-comd:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:PREVENTS AND object.semantic_type_abbreviation:comd AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","PREVENTS","comd", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: prevents
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    NCBIGene-prevents-dsyn:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:PREVENTS AND object.semantic_type_abbreviation:dsyn AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","PREVENTS","dsyn", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: prevents
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    NCBIGene-prevents-inpo:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:PREVENTS AND object.semantic_type_abbreviation:inpo AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","PREVENTS","inpo", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: prevents
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    NCBIGene-prevents-mobd:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:PREVENTS AND object.semantic_type_abbreviation:mobd AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","PREVENTS","mobd", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: prevents
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    NCBIGene-prevents-neop:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:PREVENTS AND object.semantic_type_abbreviation:neop AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","PREVENTS","neop", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: prevents
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    NCBIGene-prevents-patf:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:PREVENTS AND object.semantic_type_abbreviation:patf AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","PREVENTS","patf", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: prevents
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
  ## aapp - treats - Disease
    NCBIGene-treats-acab:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:TREATS AND object.semantic_type_abbreviation:acab AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","TREATS","acab", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: treats
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    revOP-Disease-treated_by-aapp:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:aapp AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:TREATS AND object.semantic_type_abbreviation:acab AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: Disease
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","TREATS","aapp", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: treated_by
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
    revOP-Disease-treated_by-gngm:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:gngm AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:TREATS AND object.semantic_type_abbreviation:acab AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: Disease
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","TREATS","gngm", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: treated_by
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
    NCBIGene-treats-anab:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:TREATS AND object.semantic_type_abbreviation:anab AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","TREATS","anab", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: treats
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    NCBIGene-treats-cgab:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:TREATS AND object.semantic_type_abbreviation:cgab AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","TREATS","cgab", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: treats
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    NCBIGene-treats-comd:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:TREATS AND object.semantic_type_abbreviation:comd AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","TREATS","comd", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: treats
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    NCBIGene-treats-dsyn:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:TREATS AND object.semantic_type_abbreviation:dsyn AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","TREATS","dsyn", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: treats
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    NCBIGene-treats-inpo:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:TREATS AND object.semantic_type_abbreviation:inpo AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","TREATS","inpo", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: treats
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    NCBIGene-treats-mobd:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:TREATS AND object.semantic_type_abbreviation:mobd AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","TREATS","mobd", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: treats
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    NCBIGene-treats-neop:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:TREATS AND object.semantic_type_abbreviation:neop AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","TREATS","neop", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: treats
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    NCBIGene-treats-patf:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:TREATS AND object.semantic_type_abbreviation:patf AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","TREATS","patf", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: Disease
        predicate: treats
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
  ## aapp - GrossAnatomicalStructure
    NCBIGene-affects-bpoc:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:AFFECTS AND object.semantic_type_abbreviation:bpoc AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","AFFECTS","bpoc", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: GrossAnatomicalStructure
        predicate: affects
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    revOP-GrossAnatomicalStructure-affected_by-aapp:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:aapp AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:AFFECTS AND object.semantic_type_abbreviation:bpoc AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: GrossAnatomicalStructure
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","AFFECTS","aapp", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: affected_by
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
    revOP-GrossAnatomicalStructure-affected_by-gngm:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:gngm AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:AFFECTS AND object.semantic_type_abbreviation:bpoc AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: GrossAnatomicalStructure
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","AFFECTS","gngm", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: affected_by
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
    NCBIGene-augments-bpoc:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:AUGMENTS AND object.semantic_type_abbreviation:bpoc AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","AUGMENTS","bpoc", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: GrossAnatomicalStructure
        predicate: entity_positively_regulates_entity
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    revOP-GrossAnatomicalStructure-augmented_by-aapp:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:aapp AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:AUGMENTS AND object.semantic_type_abbreviation:bpoc AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: GrossAnatomicalStructure
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","AUGMENTS","aapp", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: entity_positively_regulated_by_entity
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
    revOP-GrossAnatomicalStructure-augmented_by-gngm:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:gngm AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:AUGMENTS AND object.semantic_type_abbreviation:bpoc AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: GrossAnatomicalStructure
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","AUGMENTS","gngm", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: entity_positively_regulated_by_entity
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
    NCBIGene-disrupts-bpoc:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:DISRUPTS AND object.semantic_type_abbreviation:bpoc AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","DISRUPTS","bpoc", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: GrossAnatomicalStructure
        predicate: disrupts
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    revOP-GrossAnatomicalStructure-disrupted_by-aapp:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:aapp AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:DISRUPTS AND object.semantic_type_abbreviation:bpoc AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: GrossAnatomicalStructure
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","DISRUPTS","aapp", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: disrupted_by
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
    revOP-GrossAnatomicalStructure-disrupted_by-gngm:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:gngm AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:DISRUPTS AND object.semantic_type_abbreviation:bpoc AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: GrossAnatomicalStructure
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","DISRUPTS","gngm", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: disrupted_by
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
    NCBIGene-part_of-bpoc:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:PART_OF AND object.semantic_type_abbreviation:bpoc AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","PART_OF","bpoc", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: GrossAnatomicalStructure
        predicate: part_of
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    revOP-GrossAnatomicalStructure-has_part-aapp:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:aapp AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:PART_OF AND object.semantic_type_abbreviation:bpoc AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: GrossAnatomicalStructure
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","PART_OF","aapp", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: has_part
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
    revOP-GrossAnatomicalStructure-has_part-gngm:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:gngm AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:PART_OF AND object.semantic_type_abbreviation:bpoc AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: GrossAnatomicalStructure
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","PART_OF","gngm", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: has_part
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
  ## aapp - MolecularActivity
    NCBIGene-affects-moft:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:AFFECTS AND object.semantic_type_abbreviation:moft AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","AFFECTS","moft", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: MolecularActivity
        predicate: affects
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    revOP-MolecularActivity-affected_by-aapp:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:aapp AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:AFFECTS AND object.semantic_type_abbreviation:moft AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: MolecularActivity
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","AFFECTS","aapp", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: affected_by
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
    revOP-MolecularActivity-affected_by-gngm:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:gngm AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:AFFECTS AND object.semantic_type_abbreviation:moft AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: MolecularActivity
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","AFFECTS","gngm", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: affected_by
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
    NCBIGene-augments-moft:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:AUGMENTS AND object.semantic_type_abbreviation:moft AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","AUGMENTS","moft", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: MolecularActivity
        predicate: entity_positively_regulates_entity
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    revOP-MolecularActivity-augmented_by-aapp:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:aapp AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:AUGMENTS AND object.semantic_type_abbreviation:moft AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: MolecularActivity
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","AUGMENTS","aapp", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: entity_positively_regulated_by_entity
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
    revOP-MolecularActivity-augmented_by-gngm:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:gngm AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:AUGMENTS AND object.semantic_type_abbreviation:moft AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: MolecularActivity
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","AUGMENTS","gngm", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: entity_positively_regulated_by_entity
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
    NCBIGene-disrupts-moft:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:DISRUPTS AND object.semantic_type_abbreviation:moft AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","DISRUPTS","moft", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: MolecularActivity
        predicate: disrupts
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    revOP-MolecularActivity-disrupted_by-aapp:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:aapp AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:DISRUPTS AND object.semantic_type_abbreviation:moft AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: MolecularActivity
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","DISRUPTS","aapp", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: disrupted_by
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
    revOP-MolecularActivity-disrupted_by-gngm:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:gngm AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:DISRUPTS AND object.semantic_type_abbreviation:moft AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: MolecularActivity
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","DISRUPTS","gngm", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: disrupted_by
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
    NCBIGene-stimulates-moft:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:STIMULATES AND object.semantic_type_abbreviation:moft AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","STIMULATES","moft", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: MolecularActivity
        predicate: entity_positively_regulates_entity
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    revOP-MolecularActivity-stimulated_by-aapp:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:aapp AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:STIMULATES AND object.semantic_type_abbreviation:moft AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: MolecularActivity
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","STIMULATES","aapp", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: entity_positively_regulated_by_entity
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
    revOP-MolecularActivity-stimulated_by-gngm:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:gngm AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:STIMULATES AND object.semantic_type_abbreviation:moft AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: MolecularActivity
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","STIMULATES","gngm", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: entity_positively_regulated_by_entity
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
  ## aapp - PhenotypicFeature
    NCBIGene-affects-sosy:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:AFFECTS AND object.semantic_type_abbreviation:sosy AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","AFFECTS","sosy", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: PhenotypicFeature
        predicate: affects
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    revOP-PhenotypicFeature-affected_by-aapp:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:aapp AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:AFFECTS AND object.semantic_type_abbreviation:sosy AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: PhenotypicFeature
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","AFFECTS","aapp", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: affected_by
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
    revOP-PhenotypicFeature-affected_by-gngm:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:gngm AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:AFFECTS AND object.semantic_type_abbreviation:sosy AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: PhenotypicFeature
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","AFFECTS","gngm", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: affected_by
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
    NCBIGene-associated_with-sosy:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:ASSOCIATED_WITH AND object.semantic_type_abbreviation:sosy AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","ASSOCIATED_WITH","sosy", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: PhenotypicFeature
        predicate: gene_associated_with_condition
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    revOP-PhenotypicFeature-associated_with-aapp:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:aapp AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:ASSOCIATED_WITH AND object.semantic_type_abbreviation:sosy AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: PhenotypicFeature
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","ASSOCIATED_WITH","aapp", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: condition_associated_with_gene
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
    revOP-PhenotypicFeature-associated_with-gngm:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:gngm AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:ASSOCIATED_WITH AND object.semantic_type_abbreviation:sosy AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: PhenotypicFeature
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","ASSOCIATED_WITH","gngm", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: condition_associated_with_gene
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
    NCBIGene-augments-sosy:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:AUGMENTS AND object.semantic_type_abbreviation:sosy AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","AUGMENTS","sosy", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: PhenotypicFeature
        predicate: entity_positively_regulates_entity
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    revOP-PhenotypicFeature-augmented_by-aapp:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:aapp AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:AUGMENTS AND object.semantic_type_abbreviation:sosy AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: PhenotypicFeature
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","AUGMENTS","aapp", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: entity_positively_regulated_by_entity
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
    revOP-PhenotypicFeature-augmented_by-gngm:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:gngm AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:AUGMENTS AND object.semantic_type_abbreviation:sosy AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: PhenotypicFeature
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","AUGMENTS","gngm", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: entity_positively_regulated_by_entity
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
    NCBIGene-causes-sosy:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:CAUSES AND object.semantic_type_abbreviation:sosy AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","CAUSES","sosy", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: PhenotypicFeature
        predicate: causes
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    revOP-PhenotypicFeature-caused_by-aapp:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:aapp AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:CAUSES AND object.semantic_type_abbreviation:sosy AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: PhenotypicFeature
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","CAUSES","aapp", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: caused_by
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
    revOP-PhenotypicFeature-caused_by-gngm:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:gngm AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:CAUSES AND object.semantic_type_abbreviation:sosy AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: PhenotypicFeature
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","CAUSES","gngm", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: caused_by
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
    NCBIGene-disrupts-sosy:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:DISRUPTS AND object.semantic_type_abbreviation:sosy AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","DISRUPTS","sosy", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: PhenotypicFeature
        predicate: disrupts
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    revOP-PhenotypicFeature-disrupted_by-aapp:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:aapp AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:DISRUPTS AND object.semantic_type_abbreviation:sosy AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: PhenotypicFeature
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","DISRUPTS","aapp", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: disrupted_by
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
    revOP-PhenotypicFeature-disrupted_by-gngm:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:gngm AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:DISRUPTS AND object.semantic_type_abbreviation:sosy AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: PhenotypicFeature
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","DISRUPTS","gngm", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: disrupted_by
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
    NCBIGene-predisposes-sosy:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:PREDISPOSES AND object.semantic_type_abbreviation:sosy AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","PREDISPOSES","sosy", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: PhenotypicFeature
        predicate: predisposes
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    revOP-PhenotypicFeature-predisposed_by-aapp:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:aapp AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:PREDISPOSES AND object.semantic_type_abbreviation:sosy AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: PhenotypicFeature
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","PREDISPOSES","aapp", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: related_to  ## no inverse in biolink right now
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
    revOP-PhenotypicFeature-predisposed_by-gngm:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:gngm AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:PREDISPOSES AND object.semantic_type_abbreviation:sosy AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: PhenotypicFeature
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","PREDISPOSES","gngm", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: related_to  ## no inverse in biolink right now
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
    NCBIGene-prevents-sosy:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:PREVENTS AND object.semantic_type_abbreviation:sosy AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","PREVENTS","sosy", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: PhenotypicFeature
        predicate: prevents
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    revOP-PhenotypicFeature-prevented_by-aapp:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:aapp AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:PREVENTS AND object.semantic_type_abbreviation:sosy AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: PhenotypicFeature
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","PREVENTS","aapp", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: related_to  ## no inverse in biolink right now
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
    revOP-PhenotypicFeature-prevented_by-gngm:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:gngm AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:PREVENTS AND object.semantic_type_abbreviation:sosy AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: PhenotypicFeature
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","PREVENTS","gngm", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: related_to  ## no inverse in biolink right now
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
    NCBIGene-treats-sosy:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:TREATS AND object.semantic_type_abbreviation:sosy AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","TREATS","sosy", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: PhenotypicFeature
        predicate: treats
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    revOP-PhenotypicFeature-treated_by-aapp:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:aapp AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:TREATS AND object.semantic_type_abbreviation:sosy AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: PhenotypicFeature
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","TREATS","aapp", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: related_to  ## no inverse in biolink right now
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
    revOP-PhenotypicFeature-treated_by-gngm:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:gngm AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:TREATS AND object.semantic_type_abbreviation:sosy AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: PhenotypicFeature
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","TREATS","gngm", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: related_to  ## no inverse in biolink right now
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
  ## aapp - affects - PhysiologicalProcess
    NCBIGene-affects-celf:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:AFFECTS AND object.semantic_type_abbreviation:celf AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","AFFECTS","celf", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: PhysiologicalProcess
        predicate: affects
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    revOP-PhysiologicalProcess-affected_by-aapp:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:aapp AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:AFFECTS AND object.semantic_type_abbreviation:celf AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: PhysiologicalProcess
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","AFFECTS","aapp", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: affected_by
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
    revOP-PhysiologicalProcess-affected_by-gngm:
    ## https://biothings.ncats.io/semmeddb/query?q=subject.semantic_type_abbreviation:gngm AND _exists_:subject.ncbigene AND subject.novelty:1 AND predicate:AFFECTS AND object.semantic_type_abbreviation:celf AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UMLS
            semantic: PhysiologicalProcess
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","AFFECTS","gngm", 1, 1]') }} ],
              "scopes": ["object.umls", "predicate", "subject.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: affected_by
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subj"
    NCBIGene-affects-orgf:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:AFFECTS AND object.semantic_type_abbreviation:orgf AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","AFFECTS","orgf", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: PhysiologicalProcess
        predicate: affects
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    NCBIGene-affects-ortf:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:AFFECTS AND object.semantic_type_abbreviation:ortf AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","AFFECTS","ortf", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: PhysiologicalProcess
        predicate: affects
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"
    NCBIGene-affects-phsf:
    ## https://biothings.ncats.io/semmeddb/query?q=_exists_:subject.ncbigene AND subject.novelty:1 AND predicate:AFFECTS AND object.semantic_type_abbreviation:phsf AND object.novelty:1
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","AFFECTS","phsf", 1, 1]') }} ],
              "scopes": ["subject.ncbigene", "predicate", "object.semantic_type_abbreviation", "subject.novelty", "object.novelty"]
            }
        parameters:
          fields: subject,predicate,predication_id,pmid,object
          size: 1000
        outputs:
          - id: UMLS
            semantic: PhysiologicalProcess
        predicate: affects
        source: "infores:semmeddb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/umls-obj"





  x-bte-response-mapping:
    umls-obj:
      UMLS: object.umls  ## no prefix
      pubmed: pmid       ## no prefix
      original_predication_id: predication_id
    ncbigene-subj:
      NCBIGene: subject.ncbigene  ## no prefix
      pubmed: pmid       ## no prefix
      original_predication_id: predication_id
