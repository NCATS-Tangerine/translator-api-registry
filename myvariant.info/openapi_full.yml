openapi: 3.0.0
info:
  contact:
    email: help@myvariant.info
    name: Chunlei Wu
    x-id: https://github.com/newgene
    x-role: responsible developer
  description: Documentation of the MyVariant.info Variant Query web services. Learn
    more about [MyVariant.info](http://myvariant.info/)
  termsOfService: http://myvariant.info/terms/
  title: MyVariant.info API
  version: '1.0'
  x-translator:
    component: KP
    team:
      - Service Provider
servers:
- description: Encrypted Production server
  url: https://myvariant.info/v1
- description: Production server
  url: http://myvariant.info/v1
tags:
- name: variant
- name: query
- name: metadata
- name: translator
- name: biothings
paths:
  "/metadata":
    get:
      parameters:
      - "$ref": "#/components/parameters/callback"
        in: query
        name: callback
      responses:
        '200':
          description: MyVariant.info metadata object
      summary: Get metadata about the data available from MyVariant.info.
      tags:
      - metadata
  "/metadata/fields":
    get:
      parameters:
      - description: Pass a search term to filter the available fields, e.g. "search=clinvar".
        in: query
        name: search
        schema:
          type: string
      - description: Pass a prefix string to filter the available fields, e.g. "prefix=refseq".
        in: query
        name: prefix
        schema:
          type: string
      - "$ref": "#/components/parameters/callback"
        in: query
        name: callback
      responses:
        '200':
          description: MyVariant.info metadata fields object
      summary: Get metadata about the data fields available from MyVariant.info.
      tags:
      - metadata
  "/query":
    get:
      parameters:
      - description: Query string. Examples "rs752396467", "possibly_damaging", "CDK7".
          The detailed query syntax can be found from our [docs](http://docs.myvariant.info/en/latest/doc/variant_query_service.html).
        example: CDK7
        in: query
        name: q
        required: true
        schema:
          type: string
      - '1': query
        "$ref": "#/components/parameters/fields"
        name: fields
      - "$ref": "#/components/parameters/size"
        in: query
        name: size
      - "$ref": "#/components/parameters/from"
        in: query
        name: from
      - "$ref": "#/components/parameters/sort"
        in: query
        name: sort
      - description: a single field or comma-separated fields to return facets, for
          example, "facets=clinvar.gene.id", "facets=clinvar.gene.id,dbnsfp.uniprot.acc".
        in: query
        name: facets
        schema:
          type: string
      - "$ref": "#/components/parameters/callback"
        in: query
        name: callback
      - "$ref": "#/components/parameters/dotfield"
        in: query
        name: dotfield
      - "$ref": "#/components/parameters/email"
        in: query
        name: email
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/QueryResult"
          description: A query response object with "hits" property
        '400':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorResult"
          description: A response indicating an improperly formatted query
      summary: Make variant query and return matching variant list. Support JSONP
        and CORS as well.
      tags:
      - query
    post:
      parameters:
      - "$ref": "#/components/parameters/fields"
        in: query
        name: fields
      - "$ref": "#/components/parameters/dotfield"
        in: query
        name: dotfield
      - "$ref": "#/components/parameters/email"
        in: query
        name: email
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                q:
                  description: multiple query terms seperated by comma (also support
                    "+" or white space), but no wildcard, e.g., "q=rs58991260,rs2500"
                    or "q=rs58991260+rs2500"
                  type: string
                scopes:
                  description: 'Specify one or more fields (separated by comma) as
                    the search "scopes", e.g., "scopes=dbsnp.rsid". The available
                    "fields" that can be passed to "scopes" parameter are listed [here](http://docs.myvariant.info/en/latest/doc/data.html#available-fields).
                    Default: "scopes=_id" (HGVS id).'
                  type: string
              required:
              - q
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/QueryPOSTResult"
          description: Query response objects with "hits" property
        '400':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorResult"
          description: A response indicating an improperly formatted query
      summary: Make variant batch query and return matching variant hits
      tags:
      - query
      x-bte-kgs-operations:
      - "$ref": "#/components/x-bte-kgs-operations/variantAssociatedWithGene"
      - "$ref": "#/components/x-bte-kgs-operations/variantAssociatedWithCondition"
      - "$ref": "#/components/x-bte-kgs-operations/conditionAssociatedWithVariant"
      - "$ref": "#/components/x-bte-kgs-operations/variantAffectDrugResponse"
  "/variant":
    post:
      parameters:
      - "$ref": "#/components/parameters/fields"
        in: query
        name: fields
      - "$ref": "#/components/parameters/dotfield"
        in: query
        name: dotfield
      - "$ref": "#/components/parameters/email"
        in: query
        name: email
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                ids:
                  description: multiple variant ids seperated by comma, e.g., "ids=chr6:g.152708291G>A,chr1:g.35367G>A"
                    or "ids=rs5882,rs12190874". Note that currently we only take the
                    input ids up to 1000 maximum, the rest will be omitted.
                  type: string
              required:
              - ids
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  "$ref": "#/components/schemas/Variant"
                type: array
          description: a list of matching variant objects
      summary: For a list of variant ids, return the matching variant objects
      tags:
      - variant
  "/variant/{variantid}":
    get:
      parameters:
      - description: HGVS or rsid, e.g., chr6:g.152708291G>A, rs12190874
        example: chr6:g.152708291G>A
        in: path
        name: variantid
        required: true
        schema:
          type: string
      - "$ref": "#/components/parameters/fields"
        in: query
        name: fields
      - "$ref": "#/components/parameters/dotfield"
        in: query
        name: dotfield
      - "$ref": "#/components/parameters/callback"
        in: query
        name: callback
      - "$ref": "#/components/parameters/email"
        in: query
        name: email
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Variant"
          description: A matching variant object
        '404':
          description: A response indicating an unknown variant id
      summary: Retrieve variant annotation object based on HGVS or rsid, support JSONP
        and CORS as well.
      tags:
      - variant
components:
  parameters:
    callback:
      description: you can pass a "callback" parameter to make a JSONP call.
      in: query
      name: callback
      schema:
        type: string
    dotfield:
      description: 'control the format of the returned variant object. If "true" or
        "1", all fields will be collapsed into a single level deep structure (all
        nested objects will be a single level deep, using dotfield notation to signify
        the nested structure) Default: false.'
      in: query
      name: dotfield
      schema:
        type: boolean
    email:
      description: If you are regular users of our services, we encourage you to provide
        us an email, so that we can better track the usage or follow up with you.
      in: query
      name: email
      schema:
        type: string
    fields:
      description: 'a comma-separated fields to limit the fields returned from the
        matching variant hits. The supported field names can be found from any variant
        object (e.g. http://myvariant.info/v1/variant/rs12190874). Note that it supports
        dot notation as well, e.g., you can pass "dbsnp.rsid". If "fields=all", all
        available fields will be returned. Default: "all".'
      in: query
      name: fields
      schema:
        type: string
    from:
      description: 'the number of matching variant hits to skip, starting from 0.
        Combining with "size" parameter, this can be useful for paging. Default: 0.'
      in: query
      name: from
      schema:
        type: integer
    size:
      description: 'the maximum number of matching variant hits to return (with a
        cap of 1000 at the moment). Default: 10.'
      in: query
      name: size
      schema:
        type: integer
    sort:
      description: 'the comma-separated fields to sort on. Prefix with "-" for descending
        order, otherwise in ascending order. Default: sort by matching scores in decending
        order.'
      in: query
      name: sort
      schema:
        type: string
  schemas:
    ErrorResult:
      properties:
        message:
          type: string
        success:
          type: boolean
      type: object
    QueryPOSTResult:
      items:
        allOf:
        - "$ref": "#/components/schemas/Variant"
        - properties:
            _score:
              format: float
              type: number
            query:
              type: string
          type: object
      type: array
    QueryResult:
      properties:
        hits:
          items:
            "$ref": "#/components/schemas/Variant"
          type: array
        max_score:
          format: float
          type: number
        took:
          type: integer
        total:
          type: integer
      type: object
    Variant:
      properties:
        _id:
          type: string
      required:
      - _id
      type: object
    int64_or_array:
      oneOf:
      - items:
          format: int64
          type: integer
        type: array
      - format: int64
        type: integer
    string_or_array:
      oneOf:
      - items:
          type: string
        type: array
      - type: string
  x-bte-response-mapping:
    variant-gene:
      NCBIGene: dbsnp.gene.geneid
    variant-disease-omim:
      OMIM: clinvar.rcv.conditions.identifiers.omim
      name: clinvar.rcv.conditions.name
      clinicalsignificance: clinvar.rcv.clinical_significance
    dbsnp:
      DBSNP: dbsnp.rsid
    variant_affect_drug_response:
      name: civic.evidence_items.drugs.name
      clinical_significance: civic.evidence_items.clinical_significance
      evidence_type: civic.evidence_items.evidence_type
      evidence_level: civic.evidence_items.evidence_level
      pubmed: civic.evidence_items.source.pubmed
  x-bte-kgs-operations:
    variantAssociatedWithGene:
    - supportBatch: true
      inputSeparator: ","
      parameters:
        fields: dbsnp.gene.geneid
      predicate: is_sequence_variant_of
      source: dbsnp
      requestBody:
        body:
          q: "{inputs[0]}"
          scopes: dbsnp.rsid
        header: application/x-www-form-urlencoded
      inputs:
      - id: DBSNP
        semantic: SequenceVariant
      outputs:
      - id: NCBIGene
        semantic: Gene
      response_mapping:
        "$ref": "#/components/x-bte-response-mapping/variant-gene"
    variantAssociatedWithCondition:
    - supportBatch: true
      inputSeparator: ","
      parameters:
        fields: clinvar.rcv
      predicate: related_to
      source: clinvar
      requestBody:
        body:
          q: "{inputs[0]}"
          scopes: dbsnp.rsid
        header: application/x-www-form-urlencoded
      inputs:
      - id: DBSNP
        semantic: SequenceVariant
      outputs:
      - id: OMIM
        semantic: Disease
      response_mapping:
        "$ref": "#/components/x-bte-response-mapping/variant-disease-omim"
    conditionAssociatedWithVariant:
    - supportBatch: true
      inputSeparator: ","
      parameters:
        fields: dbsnp.rsid
        size: '250'
      predicate: related_to
      source: clinvar
      requestBody:
        body:
          q: "{inputs[0]}"
          scopes: clinvar.rcv.conditions.identifiers.omim
        header: application/x-www-form-urlencoded
      outputs:
      - id: DBSNP
        semantic: SequenceVariant
      inputs:
      - id: OMIM
        semantic: Disease
      response_mapping:
        "$ref": "#/components/x-bte-response-mapping/dbsnp"
    variantAffectDrugResponse:
      - supportBatch: true
        inputSeparator: ","
        parameters:
          fields: civic.evidence_items
          size: '1000'
        predicate: affects_response_to
        source: civic
        requestBody:
          body:
            q: "{inputs[0]}"
            scopes: dbsnp.rsid
          header: application/x-www-form-urlencoded
        inputs:
        - id: DBSNP
          semantic: SequenceVariant
        outputs:
        - id: name
          semantic: SmallMolecule
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/variant_affect_drug_response"
  
